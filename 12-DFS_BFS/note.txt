DFS/BFS

그래프?
노드와 간선으로 이루어진 자료구조

백트래킹과 DP에 대해 잘 이해가 되었다면? DFS를 확실히 아는 것

DFS : 깊이 우선 탐색 -> 일종의 백트래킹 (반복문을 재귀함수로 바꾼 것)
BFS : 너비 우선 탐색

반복문 > 누적합 > 재귀함수 > DP 메모이제이션 > 점화식...의 지금까지의 흐름에서
가지치기를 제외한 재귀함수를 이용한 반복문이 바로 DFS... 즉 특별한 개념이 아니다.

BFS? 경우의 수를 쪼개는 기존의 방식이 아니다. root node에서 가장 인접한 node들을 탐색하고, 그 다음 인접한 node들을 탐색하고..
하나 하나 가까운(depth) 순서대로 순회하여 원하는 위치에 도달했을 때 그 거리(depth)를 쉽게 표현할 수 있다.

DFS보다 BFS가 그래프 탐색에 좋다..!
DFS를 써도 되고, BFS를 써도 된다? 그냥 아무거나 쓰면 되는 것은 아니다

DFS는 경우의 수를 탐색하는 방법
BFS는 노드와 노드의 관계를 탐색하는 방법


DFS, BFS의 적합한 문제 유형
📌 DFS, BFS 모두 적합한 유형
단순히 모든 정점을 방문하는 것이 중요한 문제인 경우 어떤 것을 택해도 된다.

📌 DFS가 적합한 유형
검색 대상 그래프가 큰 경우(정점과 간선의 개수가 많음)
경로의 특징을 저장해둬야 하는 문제
ex) 각 정점에 숫자가 적혀있고 a부터 b까지 가는 경로를 구하는 데 경로에 같은 숫자가 있으면 안된다는 문제
BFS는 경로의 특징을 가지지 못함

📌 BFS가 적합한 유형
미로찾기 등 최단거리를 구해야 할 경우
DFS는 처음으로 발견되는 해답이 최단거리 라는 것 보장 X
반면 BFS는 현재 노드에서 가까운 곳부터 찾기 때문에 경로 탐색 시 첫번째로 찾아지는 해답이 곧 최단거리이다.